#!/usr/bin/env python3
"""
Pentagonal numbers are generated by the formula, Pn=n(3n−1)/2. The first ten
pentagonal numbers are:

1, 5, 12, 22, 35, 51, 70, 92, 117, 145, ...

It can be seen that P4 + P7 = 22 + 70 = 92 = P8. However,
their difference, 70 − 22 = 48, is not pentagonal.

Find the pair of pentagonal numbers, Pj and Pk, for which their sum and
difference are pentagonal and D = |Pk − Pj| is minimised;
what is the value of D?
"""

import math

MAX_RANGE = int(10e7)


def problem_44():

    def P(n):
        return int((n * (3*n - 1)) / 2)

    def unP(x):
        # FYI – there were missing parentheses here.
        n = (math.sqrt(24*x + 1) + 1) / 6
        return n if int(n) == n else False

    def D(J, K):
        return abs(J - K)

    running, j = True, 1

    while running:
        j += 1
        J = P(j)

        k = j

        while True:
            k += 1

            if abs(j - k) > 1e6:
                # because given enough loops it will find D for any j
                break

            K = P(k)

            if unP(J + K) and unP(abs(J - K)):
                return D(J, K), J, K, j, k


print(problem_44())
