// To run:
//      go run 2.go
//      or
//      go build 2.go

// Problem:
//      Each new term in the Fibonacci sequence is generated by adding the
//      previous two terms. By starting with 1 and 2, the first 10 terms will
//      be:
//
//      1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...
//
//      By considering the terms in the Fibonacci sequence whose values do
//      not exceed four million, find the sum of the even-valued terms.

package main

import "fmt"
import "time"


func solve() int {
    var sum, b, c, goal int = 0, 1, 0, 4e6;

    for a := 1; a <= goal; a += b {
        if a % 2 == 0 {
            sum += a;
        }
        b = c;
        c = a;
    }
    return sum
}

func main() {
    t1 := time.Now()
    result := solve()
    t2 := time.Since(t1)

    fmt.Println(result, "in", t2);
}
